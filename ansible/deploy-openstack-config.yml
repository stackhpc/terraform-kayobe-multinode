---
- name: Deploy OpenStack Configuration
  hosts: all
  gather_facts: true
  vars_files:
    - vars/defaults.yml
  roles:
    - { name: mrlesmithjr.manage-lvm, become: true }
  tasks:
    - name: Ensure hosts are reachable
      ansible.builtin.command:
        cmd: "ping -c 1 -w 2 {{ item.key }}"
      loop: "{{ (lookup('file', '../out/admin-oc-networks.yml') | from_yaml).admin_oc_ips | dict2items }}"
      changed_when: false

    - name: Ensure python3-virtualenv is present
      ansible.builtin.package:
        name: python3-virtualenv
        state: present
      become: true

    - name: Ensure git is present
      ansible.builtin.package:
        name: git
        state: present
      become: true

    - name: Ensure `source` directory exists
      ansible.builtin.file:
        path: "{{ src_directory }}"
        state: directory
        mode: "0755"

    - name: Ensure Kayobe Config repository is present
      ansible.builtin.git:
        repo: "{{ kayobe_config_repo }}"
        version: "{{ kayobe_config_version }}"
        dest: "{{ src_directory }}/{{ kayobe_config_name }}"
        update: false

    - name: Ensure Admin Overcloud Network file is present
      ansible.builtin.copy:
        src: "../out/admin-oc-networks.yml"
        dest: "{{ src_directory }}/{{ kayobe_config_name }}/etc/kayobe/environments/{{ kayobe_config_environment }}/admin-oc-networks.yml"
        mode: "0644"

    - name: Ensure Hosts file is present
      ansible.builtin.copy:
        src: "../out/hosts"
        dest: "{{ src_directory }}/{{ kayobe_config_name }}/etc/kayobe/environments/{{ kayobe_config_environment }}/inventory/hosts"
        mode: "0644"

    - name: Ensure Kayobe repository is present
      ansible.builtin.git:
        repo: "{{ kayobe_repo }}"
        version: "{{ kayobe_version }}"
        dest: "{{ src_directory }}/{{ kayobe_name }}"
        update: false

    - name: Ensure `venvs` directory exists
      ansible.builtin.file:
        path: "{{ ansible_env.HOME }}/venvs"
        state: directory
        mode: "0755"

    - name: Ensure `kayobe` virtual environment exists with requirements
      ansible.builtin.pip:
        virtualenv: "{{ ansible_env.HOME }}/venvs/kayobe"
        requirements: "{{ src_directory }}/{{ kayobe_name }}/requirements.txt"
        state: present

    - name: Ensure `kayobe` is present
      ansible.builtin.pip:
        name: "{{ src_directory }}/{{ kayobe_name }}/"
        virtualenv: "{{ ansible_env.HOME }}/venvs/kayobe"
        state: present

    - name: Ensure vault password is present
      ansible.builtin.copy:
        src: "{{ vault_password_path }}"
        dest: "{{ ansible_env.HOME }}/vault-pw"
        mode: "0600"

    - name: Ensure public key is present
      ansible.builtin.copy:
        src: "{{ public_key_path }}"
        dest: "{{ ansible_env.HOME }}/.ssh/id_rsa.pub"
        mode: "0644"

    - name: Ensure private key is present
      ansible.builtin.copy:
        src: "{{ private_key_path }}"
        dest: "{{ ansible_env.HOME }}/.ssh/id_rsa"
        mode: "0600"

    - name: Ensure OpenStack Config repository is present
      ansible.builtin.git:
        repo: "{{ openstack_config_repo }}"
        dest: "{{ src_directory }}/{{ openstack_config_name }}"
        version: "{{ openstack_config_version }}"

    - name: Ensure `openstack` virtualenv is present
      ansible.builtin.pip:
        requirements: "{{ src_directory }}/{{ openstack_config_name }}/requirements.txt"
        virtualenv: "{{ src_directory }}/{{ openstack_config_name }}/ansible/openstack-config-venv"
        state: present

    - name: Ensure `openstack` ansible role requirements are present
      community.general.ansible_galaxy_install:
        dest: "{{ src_directory }}/{{ openstack_config_name }}/ansible/roles"
        requirements_file: "{{ src_directory }}/{{ openstack_config_name }}/requirements.yml"
        type: role
      vars:
        - ansible_python_interpreter: "{{ src_directory }}/{{ openstack_config_name }}/ansible/openstack-config-venv/bin/python3"
      environment:
        - PATH: "{{ ansible_env.HOME }}/venvs/openstack/bin/:{{ ansible_env.PATH }}"

    - name: Ensure `openstack` ansible collection requirements are present
      community.general.ansible_galaxy_install:
        dest: "{{ src_directory }}/{{ openstack_config_name }}/ansible/collections"
        requirements_file: "{{ src_directory }}/{{ openstack_config_name }}/requirements.yml"
        type: collection
      vars:
        - ansible_python_interpreter: "{{ ansible_env.HOME }}/venvs/openstack/bin/python3"
      environment:
        - PATH: "{{ ansible_env.HOME }}/venvs/openstack/bin/:{{ ansible_env.PATH }}"

    - name: Ensure modified openstack config inventory exists
      ansible.builtin.copy:
        src: ../out/openstack-inventory
        dest: "{{ src_directory }}/{{ openstack_config_name }}/ansible/inventory"
        mode: 0644

    - name: Ensure `deploy-openstack.sh` script is present
      ansible.builtin.copy:
        src: "files/deploy-openstack.sh"
        dest: "{{ ansible_env.HOME }}/deploy-openstack.sh"
        mode: "744"
      tags: deploy-openstack
