---

- hosts: localhost
  tasks:    
    - name: Show Playbook Directory
      debug:
       msg: "{{ playbook_dir }}"

    - name: Template Terraform files into project directory
      template:
        src: terraform.tfvars.j2
        dest: "{{ playbook_dir }}/terraform.tfvars"
  
    - name: Template Terraform userdata.cfg.tpl files into project template directory
      template:
        src: "{{ playbook_dir }}/templates/userdata.cfg.tpl.j2"
        dest: "{{ playbook_dir }}/templates/userdata.cfg.tpl"


# Provision the infrastructure
# The CaaS puts hosts for accessing the OpenStack API into the 'openstack' group
- hosts: openstack
  roles:
    - cluster_infra

- hosts: localhost
  tasks: 
    - block:
      # Install the ansible requirements
      - name: Install ansible requirements
        command: ansible-galaxy install -r ansible/requirements.yml

      # - name: Deploy ansible playbook manually
      #   command: ansible-playbook -i ansible/inventory.yml ansible/configure-hosts.yml
      #   vars:
      #    terraform_binary_directory: "{{ playbook_dir }}/../bin"
      #    terraform_binary_path: "{{ terraform_binary_directory }}/../terraform"
      #    terraform_project_path: "{{ playbook_dir }}"

#      - debug: var=outputs
#        vars:
#          outputs: 
#            cluster_access_ip: "{{ hostvars[groups['openstack'][0]].cluster_gateway_ip }}"

      - name: Debug groups
        debug:
          msg: "{{ groups | to_yaml }}"   
#      when: cluster_state != "absent"

# Import the playbook to start configuring the multi-node hosts.
- name: Configure hosts and deploy ansible
  import_playbook: ansible/configure-hosts.yml   


# - hosts: multinode_ansible_control
#   tasks: 
#     - name: Test hostname
#       command: hostname